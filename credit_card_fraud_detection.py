# -*- coding: utf-8 -*-
"""Credit_Card_Fraud_Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q3UBdAy7L4y4uB2NJvmg_x0kNw6S9X_X
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

dataset = pd.read_csv('creditcard.csv')

dataset.shape

dataset.isna().sum()

dataset.head()

pd.value_counts(dataset['Class'])

sns.countplot(dataset['Class'])

corrmat = dataset.corr()
plt.figure(figsize=(10,10))
sns.heatmap(corrmat , vmax=0.8 , square=True)
plt.show()

len(dataset[dataset['Class']==0]) #valid transaction

len(dataset[dataset['Class']==1]) #fradulent transactions

X = dataset.iloc[: , :-1].values
y = dataset.iloc[: , -1].values

#convert imbalanced data to balanced data
from imblearn.over_sampling import RandomOverSampler
ros = RandomOverSampler(random_state=0)
x_res , y_res = ros.fit_sample(X,y)

X.shape

x_res.shape

from collections import Counter
print(Counter(y))
print(Counter(y_res))

from sklearn.model_selection import train_test_split
x_train , x_test , y_train , y_test = train_test_split(x_res , y_res , test_size=0.3 , random_state=42)

x_train.shape

y_train.shape

from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(n_estimators = 641 , random_state=0)
classifier.fit(x_train , y_train)

y_pred = classifier.predict(x_test)

n_errors = (y_pred != y_test).sum()

n_errors

y_test.shape

from sklearn.metrics import confusion_matrix , accuracy_score
cm = confusion_matrix(y_test , y_pred)
sns.heatmap(cm , annot=True)
print(accuracy_score(y_test , y_pred))

from sklearn.metrics import precision_score
precision_score(y_test , y_pred)

from sklearn.metrics import recall_score
recall_score(y_test , y_pred)

from sklearn.metrics import classification_report
print(classification_report(y_test , y_pred))

#Thank you!!